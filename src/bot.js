// bot.js

const express = require('express');
const path = require('path');
const TelegramBot = require('node-telegram-bot-api');
const logger = require('./utils/logger');

const startAttachController = require('./controllers/startAttachController');
const paymentController = require('./controllers/paymentCallbacksController');

require('dotenv').config();

const app = express();
const port = process.env.PORT || 3000;
const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: false });

// === Middleware ===
app.use(express.json());
app.use(express.static(path.join(__dirname, 'TelegramBot-UnigramPayment')));

// === Webhook –¥–ª—è Telegram ===
app.post('/bot', (req, res) => {
    bot.processUpdate(req.body);
    res.status(200).send('OK');
});

// === –†–æ—É—Ç –¥–ª—è —Ä—É—á–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook (–¥–ª—è —Ç–µ—Å—Ç–æ–≤) ===
app.get('/set-webhook', async (req, res) => {
    const webhookUrl = `${process.env.WEBHOOK_URL}/bot`;
    try {
        await bot.setWebHook(webhookUrl);
        logger.message(`‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é: ${webhookUrl}`);
        res.send(`‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookUrl}`);
    } catch (err) {
        logger.error(`‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: ${err.message}`);
        res.status(500).send(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
    }
});

// === API –†–æ—É—Ç—ã (–ø—Ä–∏–º–µ—Ä) ===
app.get('/api/test', (req, res) => {
    res.json({ status: 'API —Ä–∞–±–æ—Ç–∞–µ—Ç' });
});

// === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegram ===
bot.onText(/^\/start$/, (message) => {
    startAttachController.sendStartMessage(bot, message);
});

bot.on('successful_payment', (message) => {
    paymentController.validateSuccessPurchase(bot, message);
});

bot.on('pre_checkout_query', async (query) => {
    await paymentController.validateInvoiceProcess(bot, query);
});

bot.on('polling_error', (error) => {
    logger.error(`Polling error: ${error.message}`);
});

// === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
app.listen(port, async () => {
    logger.message(`Unigram Payment Bot Template started at port: ${port}`);

    const webhookUrl = `${process.env.WEBHOOK_URL}/bot`;

    try {
        await bot.setWebHook(webhookUrl);
        logger.message(`‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: ${webhookUrl}`);
    } catch (err) {
        logger.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook: ${err.message}`);
        logger.message(`üëâ –û—Ç–∫—Ä–æ–π—Ç–µ /set-webhook –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä—É—á–Ω—É—é`);
    }
});
